{"version":3,"sources":["index.js"],"names":["CustomButton","props","color","backgroundColor","borderRadius","opacity","fontSize","divStyle","disabled","style","buttonText","Range","name","type","min","max","step","value","onChange","Color","Text","Checkbox","Setting","state","handleChange","bind","event","target","checked","this","setState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0fa13902.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nconst CustomButton = (props) => {\r\n  const color = props.color;\r\n  const backgroundColor = props.backgroundColor;\r\n  const borderRadius = props.borderRadius;\r\n  const opacity = props.opacity;\r\n  const fontSize = props.fontSize;\r\n\r\n  const divStyle = {\r\n    color: color,\r\n    backgroundColor: backgroundColor,\r\n    borderRadius: `${borderRadius}%`,\r\n    opacity: opacity,\r\n    fontSize: `${fontSize}px`,\r\n  };\r\n\r\n  return (\r\n    <button disabled={props.disabled} style={divStyle}>\r\n      {props.buttonText}\r\n    </button>\r\n  )\r\n}\r\n\r\nconst Range = (props) => {\r\n  return (\r\n    <form>\r\n      <label>{props.name}</label>\r\n      <input name={props.name} type=\"range\" min={props.min} max={props.max} step={props.step} value={props.value} onChange={props.onChange} />\r\n      {props.value}\r\n    </form>\r\n  );\r\n}\r\n\r\nconst Color = (props) => {\r\n  return (\r\n    <form>\r\n      <label>{props.name}</label>\r\n      <input name={props.name} type=\"color\" value={props.value} onChange={props.onChange} />\r\n    </form>\r\n  )\r\n}\r\n\r\nconst Text = (props) => {\r\n  return (\r\n    <form>\r\n      <label>{props.name}</label>\r\n      <input name={props.name} type=\"text\" value={props.value} onChange={props.onChange} />\r\n    </form>\r\n  )\r\n}\r\n\r\nconst Checkbox = (props) => {\r\n  return (\r\n    <form>\r\n      <label>{props.name}</label>\r\n      <input name={props.name} type=\"checkbox\" value={props.value} onChange={props.onChange} />\r\n    </form>\r\n  )\r\n}\r\n\r\nclass Setting extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      color: '',\r\n      backgroundColor: '',\r\n      opacity: \"1\",\r\n      borderRadius: \"50\",\r\n      fontSize: \"30\",\r\n      disabled: false,\r\n      buttonText: \"custom button\",\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CustomButton\r\n          color={this.state.color}\r\n          backgroundColor={this.state.backgroundColor}\r\n          opacity={this.state.opacity}\r\n          borderRadius={this.state.borderRadius}\r\n          fontSize={this.state.fontSize}\r\n          disabled={this.state.disabled}\r\n          buttonText={this.state.buttonText}\r\n        />\r\n        <Color\r\n          name=\"color\"\r\n          value={this.state.color}\r\n          onChange={this.handleChange}\r\n        />\r\n        <Color\r\n          name=\"backgroundColor\"\r\n          value={this.state.backgroundColor}\r\n          onChange={this.handleChange}\r\n        />\r\n        <Range\r\n          name=\"opacity\"\r\n          min=\"0\"\r\n          max=\"1\"\r\n          step=\"0.1\"\r\n          value={this.state.opacity}\r\n          onChange={this.handleChange}\r\n        />\r\n        <Range\r\n          name=\"borderRadius\"\r\n          min=\"0\"\r\n          max=\"50\"\r\n          step=\"1\"\r\n          value={this.state.borderRadius}\r\n          onChange={this.handleChange}\r\n        />\r\n        <Range\r\n          name=\"fontSize\"\r\n          min=\"10\"\r\n          max=\"40\"\r\n          step=\"1\"\r\n          value={this.state.fontSize}\r\n          onChange={this.handleChange}\r\n        />\r\n        <Checkbox\r\n          name=\"disabled\"\r\n          value={this.state.disabled}\r\n          onChange={this.handleChange}\r\n        />\r\n        <Text\r\n          name=\"buttonText\"\r\n          value={this.state.buttonText}\r\n          onChange={this.handleChange}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <Setting />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}